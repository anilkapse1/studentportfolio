{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\react\\\\rsst\\\\src\\\\pages\\\\Stream.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Item from '../components/Item';\nimport leftbg from \"../assets/images/left-bg.png\";\nimport { useEffect } from 'react';\nimport { getStudent } from '../redux/actions/studentActions';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stream = () => {\n  _s();\n  const Streamwrapper = styled.div`\n    position: relative;\n    background-color: white;\n    background-image: url(${leftbg});\n    background-size: auto;\n    background-repeat: no-repeat;\n    background-position: left;\n\n    .streamwrapper{\n      h3{\n        color:${_ref => {\n    let {\n      theme\n    } = _ref;\n    return theme.colors.headeractive;\n  }};\n        font-family:inherit;\n        margin:0!important;\n      }\n      span{\n        color:${_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return theme.colors.text7;\n  }};\n        position: relative;\n        font-size:14px;\n      }\n    }\n  `;\n\n  //fetch student details\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getStudent());\n  }, []);\n\n  //get student list from store\n  const studentList = useSelector(state => {\n    return state.student;\n  });\n  console.log('stream pages');\n  const groupArea = studentList.reduce((acc, value) => {\n    (acc[value.group] = acc[value.group] || []).push(value);\n    return acc;\n  }, []);\n  console.log('keys');\n  const keysvalue = Object.keys(groupArea);\n  console.log(keysvalue);\n  return /*#__PURE__*/_jsxDEV(Streamwrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"streamwrapper common_margin\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        className: \"mt-3\",\n        children: \"Primary stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"std 1 to 4 \", groupArea.primary_stage.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item_container\",\n        children: groupArea.primary_stage.map((val, idx) => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            id: idx,\n            data: val\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Stream, \"iR1HP/kZx/doxdn9zFaiAwQKFyA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Stream;\nexport default Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","Container","useDispatch","useSelector","styled","Item","leftbg","useEffect","getStudent","Typography","Stream","Streamwrapper","div","theme","colors","headeractive","text7","dispatch","studentList","state","student","console","log","groupArea","reduce","acc","value","group","push","keysvalue","Object","keys","primary_stage","length","map","val","idx"],"sources":["D:/git/react/rsst/src/pages/Stream.js"],"sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Item from '../components/Item';\r\nimport leftbg from \"../assets/images/left-bg.png\";\r\nimport { useEffect } from 'react';\r\nimport { getStudent } from '../redux/actions/studentActions';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n\r\nconst Stream = () => {\r\n  const Streamwrapper=styled.div`\r\n    position: relative;\r\n    background-color: white;\r\n    background-image: url(${leftbg});\r\n    background-size: auto;\r\n    background-repeat: no-repeat;\r\n    background-position: left;\r\n\r\n    .streamwrapper{\r\n      h3{\r\n        color:${({theme})=>theme.colors.headeractive};\r\n        font-family:inherit;\r\n        margin:0!important;\r\n      }\r\n      span{\r\n        color:${({theme})=>theme.colors.text7};\r\n        position: relative;\r\n        font-size:14px;\r\n      }\r\n    }\r\n  `\r\n\r\n  //fetch student details\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getStudent());\r\n  }, []);\r\n\r\n  \r\n//get student list from store\r\nconst studentList = useSelector((state) => {\r\n  return state.student;\r\n});\r\n\r\n\r\nconsole.log('stream pages');\r\n\r\nconst groupArea = studentList.reduce((acc,value)=>{\r\n  (acc[value.group]=acc[value.group] || []).push(value);\r\n    return acc\r\n},[])\r\n\r\nconsole.log('keys');\r\nconst keysvalue = Object.keys(groupArea);\r\nconsole.log(keysvalue);\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <Streamwrapper>\r\n      <Container className='streamwrapper common_margin'>\r\n     \r\n        <Typography variant=\"h3\" className='mt-3'>Primary stage</Typography>\r\n        <span>std 1 to 4 {groupArea.primary_stage.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.primary_stage.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div>\r\n\r\n        {/* <Typography variant=\"h3\" className='mt-3'>Middle stage</Typography>\r\n        <span>std 5th to 7th {groupArea.middle_stage.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.middle_stage.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div>\r\n\r\n        <Typography variant=\"h3\" className='mt-3'>secondary stage</Typography>\r\n        <span>std 8th to 10th {groupArea.secondary_stage.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.secondary_stage.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div>\r\n\r\n        <Typography variant=\"h3\" className='mt-3'>Higher secondary stage</Typography>\r\n        <span>std 11th to 12th {groupArea.higher_secondary_stage.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.higher_secondary_stage.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div>\r\n\r\n        <Typography variant=\"h3\" className='mt-3'>graduate</Typography>\r\n        <span>Graduate {groupArea.graduate.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.graduate.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div>\r\n\r\n        <Typography variant=\"h3\" className='mt-3'>post graduate</Typography>\r\n        <span>Post Graduate {groupArea.post_graduate.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.post_graduate.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div>\r\n\r\n        <Typography variant=\"h3\" className='mt-3'>Medical Science</Typography>\r\n        <span>Medical science {groupArea.medical_science.length}</span>\r\n        <div className=\"item_container\">\r\n        {\r\n          groupArea.medical_science.map((val, idx) => {\r\n            return <Item key={idx} id={idx} data={val} />;\r\n          })\r\n        }\r\n        </div> */}\r\n\r\n      </Container>\r\n    </Streamwrapper>\r\n  )\r\n}\r\n\r\nexport default Stream"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAKlD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAMC,aAAa,GAACP,MAAM,CAACQ,GAAI;AACjC;AACA;AACA,4BAA4BN,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;IAAA,IAAC;MAACO;IAAK,CAAC;IAAA,OAAGA,KAAK,CAACC,MAAM,CAACC,YAAY;EAAA,CAAC;AACrD;AACA;AACA;AACA;AACA,gBAAgB;IAAA,IAAC;MAACF;IAAK,CAAC;IAAA,OAAGA,KAAK,CAACC,MAAM,CAACE,KAAK;EAAA,CAAC;AAC9C;AACA;AACA;AACA;AACA,GAAG;;EAED;EACA,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9BK,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACT,UAAU,EAAE,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAGR;EACA,MAAMU,WAAW,GAAGf,WAAW,CAAEgB,KAAK,IAAK;IACzC,OAAOA,KAAK,CAACC,OAAO;EACtB,CAAC,CAAC;EAGFC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAE3B,MAAMC,SAAS,GAAGL,WAAW,CAACM,MAAM,CAAC,CAACC,GAAG,EAACC,KAAK,KAAG;IAChD,CAACD,GAAG,CAACC,KAAK,CAACC,KAAK,CAAC,GAACF,GAAG,CAACC,KAAK,CAACC,KAAK,CAAC,IAAI,EAAE,EAAEC,IAAI,CAACF,KAAK,CAAC;IACnD,OAAOD,GAAG;EACd,CAAC,EAAC,EAAE,CAAC;EAELJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,MAAMO,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACR,SAAS,CAAC;EACxCF,OAAO,CAACC,GAAG,CAACO,SAAS,CAAC;EAOtB,oBACI,QAAC,aAAa;IAAA,uBACZ,QAAC,SAAS;MAAC,SAAS,EAAC,6BAA6B;MAAA,wBAEhD,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA2B,eACpE;QAAA,0BAAkBN,SAAS,CAACS,aAAa,CAACC,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxD;QAAK,SAAS,EAAC,gBAAgB;QAAA,UAE7BV,SAAS,CAACS,aAAa,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UACxC,oBAAO,QAAC,IAAI;YAAW,EAAE,EAAEA,GAAI;YAAC,IAAI,EAAED;UAAI,GAAxBC,GAAG;YAAA;YAAA;YAAA;UAAA,QAAwB;QAC/C,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA;EA8DI;IAAA;IAAA;IAAA;EAAA,QACE;AAEpB,CAAC;AAAA,GAjIK1B,MAAM;EAAA,QAwBOR,WAAW,EAOVC,WAAW;AAAA;AAAA,KA/BzBO,MAAM;AAmIZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}