{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\react\\\\rsst\\\\src\\\\pages\\\\Area.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport leftbg from \"../assets/images/left-bg.png\";\nimport { useEffect } from 'react';\nimport { getStudent } from '../redux/actions/studentActions';\nimport Streamseparation from '../components/Streamseparation';\nimport emptyImage from \"../assets/images/empty.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Area = () => {\n  _s();\n  const Areawrapper = styled.div`\n    position: relative;\n    background-color: white;\n    background-image: url(${leftbg});\n    background-size: auto;\n    background-repeat: no-repeat;\n    background-position: top left;\n\n    \n`;\n\n  //fetch student details\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getStudent());\n  }, []);\n\n  //get student list from store\n  const studentList = useSelector(state => {\n    return state.student;\n  });\n  console.log('student list');\n  console.log(studentList);\n  const [area, setArea] = useState(\"dadra\");\n  // const [areaGroup,setareagroup] = useState()\n\n  const groupArea = studentList.reduce((acc, value) => {\n    acc[value.area] = acc[value.area] || {};\n    acc[value.area][value.group] = acc[value.area][value.group] || [];\n    acc[value.area][value.group].push(value);\n    return acc;\n  }, []);\n  console.log('area');\n  console.log(groupArea);\n  console.log('group by area', area);\n  const result = groupArea[area];\n  console.log(result);\n\n  //------display search data using condition\n  let displayData;\n  if (result.length == 0) {\n    displayData = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: emptyImage,\n      alt: \"empty list\",\n      className: \"emptyImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  } else {\n    displayData = Object.keys(result).map((val, idx) => {\n      return /*#__PURE__*/_jsxDEV(Streamseparation, {\n        id: idx,\n        groupName: val,\n        data: result[val]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Areawrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"areawrapper common_margin\",\n      children: displayData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Area, \"N7i+TuUHZfGxmMAE6C9HkeD3Q2Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Area;\nexport default Area;\nvar _c;\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"names":["React","useState","Container","useDispatch","useSelector","styled","leftbg","useEffect","getStudent","Streamseparation","emptyImage","Area","Areawrapper","div","dispatch","studentList","state","student","console","log","area","setArea","groupArea","reduce","acc","value","group","push","result","displayData","length","Object","keys","map","val","idx"],"sources":["D:/git/react/rsst/src/pages/Area.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport leftbg from \"../assets/images/left-bg.png\";\r\nimport { useEffect } from 'react';\r\nimport { getStudent } from '../redux/actions/studentActions';\r\nimport Streamseparation from '../components/Streamseparation';\r\nimport emptyImage from \"../assets/images/empty.png\";\r\n\r\nconst Area = () => {\r\n  const Areawrapper=styled.div`\r\n    position: relative;\r\n    background-color: white;\r\n    background-image: url(${leftbg});\r\n    background-size: auto;\r\n    background-repeat: no-repeat;\r\n    background-position: top left;\r\n\r\n    \r\n`;\r\n\r\n//fetch student details\r\nconst dispatch = useDispatch();\r\nuseEffect(() => {\r\n  dispatch(getStudent());\r\n}, []);\r\n\r\n//get student list from store\r\nconst studentList = useSelector((state) => {\r\n  return state.student;\r\n});\r\nconsole.log('student list');\r\nconsole.log(studentList);\r\n\r\n\r\n\r\nconst [area, setArea] = useState(\"dadra\")\r\n// const [areaGroup,setareagroup] = useState()\r\n\r\n\r\nconst groupArea = studentList.reduce((acc,value)=>{\r\n  acc[value.area] = acc[value.area] || {};\r\n  acc[value.area][value.group] = acc[value.area][value.group] || [];\r\n  acc[value.area][value.group].push(value)\r\n  return acc\r\n},[])\r\n\r\nconsole.log('area');\r\nconsole.log(groupArea);\r\n\r\nconsole.log('group by area',area);\r\nconst result = groupArea[area];\r\nconsole.log(result);\r\n\r\n\r\n  //------display search data using condition\r\n  let displayData;\r\n  if (result.length == 0) {\r\n    displayData = (\r\n      <img src={emptyImage} alt=\"empty list\" className=\"emptyImage\" />\r\n    );\r\n  } else {\r\n    displayData = Object.keys(result).map((val, idx) => {\r\n      return <Streamseparation key={idx} id={idx} groupName={val} data={result[val]} />;\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Areawrapper>\r\n      <Container className='areawrapper common_margin'>\r\n      {\r\n         displayData\r\n      }\r\n      </Container>\r\n    </Areawrapper>\r\n  )\r\n}\r\n\r\nexport default Area"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}